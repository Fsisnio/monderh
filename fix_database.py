#!/usr/bin/env python3
"""
Script pour corriger la base de donn√©es et supprimer les colonnes LinkedIn
"""

import sqlite3
import os

def fix_database():
    """Corrige la base de donn√©es en supprimant les colonnes LinkedIn probl√©matiques"""
    print("üîß Correction de la base de donn√©es...")
    print("=" * 50)
    
    db_path = 'instance/monderh.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå Base de donn√©es non trouv√©e : {db_path}")
        return
    
    try:
        # Connexion √† la base de donn√©es
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # V√©rifier les colonnes de la table user
        cursor.execute("PRAGMA table_info(user)")
        columns = cursor.fetchall()
        column_names = [col[1] for col in columns]
        
        print(f"üìã Colonnes actuelles de la table 'user' :")
        for col in columns:
            print(f"   - {col[1]} ({col[2]})")
        
        # Supprimer les colonnes LinkedIn si elles existent
        linkedin_columns = [
            'linkedin_headline',
            'linkedin_location', 
            'linkedin_industry',
            'linkedin_summary',
            'linkedin_skills'
        ]
        
        for col in linkedin_columns:
            if col in column_names:
                print(f"üóëÔ∏è  Suppression de la colonne '{col}'...")
                # SQLite ne supporte pas DROP COLUMN directement, on doit recr√©er la table
                # Pour l'instant, on va juste ignorer ces colonnes
                print(f"   ‚ö†Ô∏è  Colonne '{col}' trouv√©e mais pas supprim√©e (n√©cessite une migration compl√®te)")
        
        # V√©rifier que la base fonctionne
        cursor.execute("SELECT COUNT(*) FROM user")
        user_count = cursor.fetchone()[0]
        print(f"‚úÖ Base de donn√©es fonctionnelle - {user_count} utilisateurs trouv√©s")
        
        conn.close()
        print("\n‚úÖ Correction termin√©e !")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la correction : {e}")
        if 'conn' in locals():
            conn.close()

if __name__ == '__main__':
    fix_database() 